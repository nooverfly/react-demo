{"version":3,"sources":["component/parent-child/Child.tsx","component/parent-child/Parent.tsx","other/i18n/i18n.ts","other/i18n/Locale.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Child","_","ref","test","console","log","useImperativeHandle","forwardRef","Parent","children","useRef","onClick","current","window","LOCALE","i18n","use","initReactI18next","init","lng","fallbackLng","resources","zh","translation","en","Locale","t","useTranslation","type","placeholder","e","changeLanguage","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"omBAEMA,EAAQ,SAACC,EAAQC,GAEnB,IAAMC,EAAO,WACTC,QAAQC,IAAI,SAUhB,OAPAC,8BACIJ,GACA,iBAAO,CACHC,WAKJ,yCAIOI,uBAAWP,GCHXQ,EAdA,WACX,IAAMC,EAAWC,iBAAO,MAKxB,OACI,gCACI,cAAC,EAAD,CAAOR,IAAKO,IACZ,qBAAKE,QAPQ,WAAO,IAAD,EAEvB,UAAAF,EAASG,eAAT,SAAkBT,QAKd,8B,8CCPZU,OAAOC,OAAS,KAEhBC,IAAKC,IAAIC,KAAkBC,KAAK,CAC9BC,IAAKN,OAAOC,OACZM,YAAaP,OAAOC,OACpBO,UAAW,CACTC,GAAI,CACFC,YAAaD,GAEfE,GAAI,CACFD,YAAaC,MAKJT,QAAf,E,QCjBe,SAASU,IAAU,IACxBC,EAAMC,cAAND,EAKR,OACE,gCACE,gCACGA,EAAE,QADL,KACe,uBAAOE,KAAK,OAAOC,YAAaH,EAAE,yBAEjD,gCACGA,EAAE,OADL,KACc,uBAAOE,KAAK,OAAOC,YAAaH,EAAE,wBAEhD,8BACE,wBAAQf,QAbO,SAACmB,GACF,OAAlBjB,OAAOC,OAAmBD,OAAOC,OAAS,KAASD,OAAOC,OAAS,KACnEC,EAAKgB,eAAelB,OAAOC,SAWvB,SAAgCY,EAAE,iBCI3BM,MAlBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAZ,SACE,cAACR,EAAD,MAEF,cAAC,IAAD,CAAOQ,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,+CCDKC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9fad8626.chunk.js","sourcesContent":["import { forwardRef, useImperativeHandle } from \"react\";\n\nconst Child = (_: any, ref: any) => {\n\n    const test = () => {\n        console.log(\"test\");\n    }\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            test\n        })\n    )\n\n    return (\n        <div>Child</div>\n    )\n}\n\nexport default forwardRef(Child);","import { useRef } from \"react\";\nimport Child from \"./Child\"\n\nconst Parent = () => {\n    const children = useRef(null);\n    const clickHandler = () => {\n        // @ts-ignore\n        children.current?.test();\n    }\n    return (\n        <div>\n            <Child ref={children} />\n            <div onClick={clickHandler}>按钮</div>\n        </div>\n    )\n}\n\nexport default Parent;","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport zh from \"./locales/zh/translation.json\";\nimport en from \"./locales/en/translation.json\";\n\nwindow.LOCALE = \"zh\";\n\ni18n.use(initReactI18next).init({\n  lng: window.LOCALE,\n  fallbackLng: window.LOCALE,\n  resources: {\n    zh: {\n      translation: zh\n    },\n    en: {\n      translation: en\n    }\n  }\n});\n\nexport default i18n;","import i18n from \"./i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function Locale() {\n  const { t } = useTranslation();\n  const clickHandler = (e: any) => {\n    window.LOCALE === \"zh\" ? (window.LOCALE = \"en\") : (window.LOCALE = \"zh\");\n    i18n.changeLanguage(window.LOCALE);\n  };\n  return (\n    <div>\n      <div>\n        {t(\"name\")}: <input type=\"text\" placeholder={t(\"placeholder.name\")} />\n      </div>\n      <div>\n        {t(\"age\")}: <input type=\"text\" placeholder={t(\"placeholder.age\")} />\n      </div>\n      <div>\n        <button onClick={clickHandler}>{t('switch')}</button>\n      </div>\n    </div>\n  );\n}\n","import Parent from \"./component/parent-child/Parent\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Locale from \"./other/i18n/Locale\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/i18n\">\n          <Locale />\n        </Route>\n        <Route path=\"/parent\">\n          <Parent />\n        </Route>\n        <Route path=\"/\">\n          <div>home</div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}